<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2010 The myBatis Team Licensed under the Apache License, Version 
	2.0 (the "License"); you may not use this file except in compliance with 
	the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->

<!-- This is a org.mybatis.spring.sample context that shows four different 
	ways to integrate with Spring. FooService* are beans that act as business 
	services. All of the services implement FooService which is annotated as 
	@Transactional. Each one is injected with a mapper coded/created in a different 
	way: userMapperBean is created with a MapperFactoryBean (has no implementation) 
	userMapper is searched and registered by the MapperScannerConfigurer (has 
	no implementation) userMapperDaoSupport extends SqlSessionDaoSupport userMapperSqlSession 
	uses directly MyBatis API (has no transaction support) version: $Id: context.xml 
	2717 2010-10-15 15:37:00Z eduardo.macarron $ -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd"
	default-lazy-init="true">

	<!-- ================================事务相关控制================================================= -->
	<bean name="bssTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:annotation-driven transaction-manager="bssTransactionManager"
		proxy-target-class="true" />
	<tx:advice id="bssTxAdvice" transaction-manager="bssTransactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="modify*" propagation="REQUIRED" read-only="false" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" />
			<tx:method name="remove*" propagation="REQUIRED" read-only="false" />
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false" />
			<tx:method name="cancel*" propagation="REQUIRED" read-only="false" />
			<tx:method name="submit*" propagation="REQUIRED" read-only="false" />
			<tx:method name="do*" propagation="REQUIRED" read-only="false" />
			<!-- 提交事务事件集 -->
			<tx:method name="commitSysWorkSheet" propagation="REQUIRED"
				read-only="false" />
			<!-- 执行事事件集 -->
			<tx:method name="processSysWorkSheet" propagation="REQUIRED"
				read-only="false" />
			<!-- 独立事务执行事务事件项 -->
			<tx:method name="processSysWorkItem" propagation="REQUIRES_NEW"
				read-only="false" />
			<!-- 竣工实物事件集 -->
			<tx:method name="completeSysWorkSheet" propagation="REQUIRED"
				read-only="false" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:advisor id="bssServiceTx" advice-ref="bssTxAdvice"
			pointcut="execution(* com.ffcs..service..*Service.*(..))" order="1"></aop:advisor>
		<aop:advisor id="bssManagerTx" advice-ref="bssTxAdvice"
			pointcut="execution(* com.ffcs..manager..*Manager.*(..))" order="2"></aop:advisor>
		<aop:advisor id="bssDaoTx" advice-ref="bssTxAdvice"
			pointcut="execution(* com.ffcs..dao..*Dao.*(..))" order="3"></aop:advisor>
		<aop:advisor id="bssRepositoryTx" advice-ref="bssRepositoryAdvice"
			pointcut="execution(* com.ffcs..repositor*..*Repository.*(..))"
			order="4"></aop:advisor>
	</aop:config>

	<tx:advice id="bssRepositoryAdvice" transaction-manager="bssTransactionManager">
		<tx:attributes>
			<tx:method name="insert*" read-only="false" propagation="REQUIRED" />
			<tx:method name="update*" read-only="false" propagation="REQUIRED" />
			<tx:method name="delete*" read-only="false" propagation="REQUIRED" />
			<tx:method name="jdbcExecute*" read-only="false"
				propagation="REQUIRED" />
			<tx:method name="jdbcUpdate*" read-only="false"
				propagation="REQUIRED" />
			<tx:method name="jdbcBatch*" read-only="false" propagation="REQUIRED" />
			<tx:method name="remove*" read-only="false" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

</beans>
